<svg xmlns="http://www.w3.org/2000/svg" baseProfile="tiny" width="200" height="200"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script>
  <path shape-rendering="optimizeSpeed" fill="#fff" d="M0 0h200v200H0z"/>
  <path shape-rendering="optimizeSpeed" d="M12 12h7v7h-7zM19 12h7v7h-7zM26 12h7v7h-7zM33 12h7v7h-7zM40 12h7v7h-7zM47 12h7v7h-7zM54 12h7v7h-7zM68 12h7v7h-7zM82 12h7v7h-7zM89 12h7v7h-7zM96 12h7v7h-7zM110 12h7v7h-7zM138 12h7v7h-7zM145 12h7v7h-7zM152 12h7v7h-7zM159 12h7v7h-7zM166 12h7v7h-7zM173 12h7v7h-7zM180 12h7v7h-7zM12 19h7v7h-7zM54 19h7v7h-7zM75 19h7v7h-7zM82 19h7v7h-7zM103 19h7v7h-7zM124 19h7v7h-7zM138 19h7v7h-7zM180 19h7v7h-7zM12 26h7v7h-7zM26 26h7v7h-7zM33 26h7v7h-7zM40 26h7v7h-7zM54 26h7v7h-7zM82 26h7v7h-7zM89 26h7v7h-7zM103 26h7v7h-7zM110 26h7v7h-7zM138 26h7v7h-7zM152 26h7v7h-7zM159 26h7v7h-7zM166 26h7v7h-7zM180 26h7v7h-7zM12 33h7v7h-7zM26 33h7v7h-7zM33 33h7v7h-7zM40 33h7v7h-7zM54 33h7v7h-7zM96 33h7v7h-7zM103 33h7v7h-7zM110 33h7v7h-7zM117 33h7v7h-7zM124 33h7v7h-7zM138 33h7v7h-7zM152 33h7v7h-7zM159 33h7v7h-7zM166 33h7v7h-7zM180 33h7v7h-7zM12 40h7v7h-7zM26 40h7v7h-7zM33 40h7v7h-7zM40 40h7v7h-7zM54 40h7v7h-7zM75 40h7v7h-7zM103 40h7v7h-7zM110 40h7v7h-7zM124 40h7v7h-7zM138 40h7v7h-7zM152 40h7v7h-7zM159 40h7v7h-7zM166 40h7v7h-7zM180 40h7v7h-7zM12 47h7v7h-7zM54 47h7v7h-7zM82 47h7v7h-7zM89 47h7v7h-7zM103 47h7v7h-7zM110 47h7v7h-7zM138 47h7v7h-7zM180 47h7v7h-7zM12 54h7v7h-7zM19 54h7v7h-7zM26 54h7v7h-7zM33 54h7v7h-7zM40 54h7v7h-7zM47 54h7v7h-7zM54 54h7v7h-7zM68 54h7v7h-7zM82 54h7v7h-7zM96 54h7v7h-7zM110 54h7v7h-7zM124 54h7v7h-7zM138 54h7v7h-7zM145 54h7v7h-7zM152 54h7v7h-7zM159 54h7v7h-7zM166 54h7v7h-7zM173 54h7v7h-7zM180 54h7v7h-7zM68 61h7v7h-7zM82 61h7v7h-7zM103 61h7v7h-7zM117 61h7v7h-7zM12 68h7v7h-7zM19 68h7v7h-7zM33 68h7v7h-7zM40 68h7v7h-7zM54 68h7v7h-7zM75 68h7v7h-7zM82 68h7v7h-7zM96 68h7v7h-7zM103 68h7v7h-7zM110 68h7v7h-7zM117 68h7v7h-7zM124 68h7v7h-7zM138 68h7v7h-7zM180 68h7v7h-7zM19 75h7v7h-7zM26 75h7v7h-7zM33 75h7v7h-7zM40 75h7v7h-7zM75 75h7v7h-7zM89 75h7v7h-7zM117 75h7v7h-7zM145 75h7v7h-7zM152 75h7v7h-7zM159 75h7v7h-7zM166 75h7v7h-7zM173 75h7v7h-7zM26 82h7v7h-7zM33 82h7v7h-7zM54 82h7v7h-7zM82 82h7v7h-7zM89 82h7v7h-7zM103 82h7v7h-7zM110 82h7v7h-7zM117 82h7v7h-7zM131 82h7v7h-7zM145 82h7v7h-7zM159 82h7v7h-7zM180 82h7v7h-7zM19 89h7v7h-7zM26 89h7v7h-7zM40 89h7v7h-7zM47 89h7v7h-7zM61 89h7v7h-7zM75 89h7v7h-7zM82 89h7v7h-7zM96 89h7v7h-7zM110 89h7v7h-7zM117 89h7v7h-7zM138 89h7v7h-7zM145 89h7v7h-7zM159 89h7v7h-7zM166 89h7v7h-7zM173 89h7v7h-7zM180 89h7v7h-7zM12 96h7v7h-7zM40 96h7v7h-7zM54 96h7v7h-7zM68 96h7v7h-7zM75 96h7v7h-7zM89 96h7v7h-7zM124 96h7v7h-7zM138 96h7v7h-7zM145 96h7v7h-7zM180 96h7v7h-7zM12 103h7v7h-7zM26 103h7v7h-7zM75 103h7v7h-7zM89 103h7v7h-7zM110 103h7v7h-7zM117 103h7v7h-7zM131 103h7v7h-7zM152 103h7v7h-7zM173 103h7v7h-7zM12 110h7v7h-7zM19 110h7v7h-7zM26 110h7v7h-7zM33 110h7v7h-7zM40 110h7v7h-7zM54 110h7v7h-7zM61 110h7v7h-7zM68 110h7v7h-7zM75 110h7v7h-7zM82 110h7v7h-7zM96 110h7v7h-7zM103 110h7v7h-7zM117 110h7v7h-7zM124 110h7v7h-7zM131 110h7v7h-7zM138 110h7v7h-7zM152 110h7v7h-7zM159 110h7v7h-7zM166 110h7v7h-7zM173 110h7v7h-7zM180 110h7v7h-7zM12 117h7v7h-7zM61 117h7v7h-7zM82 117h7v7h-7zM89 117h7v7h-7zM96 117h7v7h-7zM110 117h7v7h-7zM117 117h7v7h-7zM124 117h7v7h-7zM138 117h7v7h-7zM145 117h7v7h-7zM159 117h7v7h-7zM166 117h7v7h-7zM180 117h7v7h-7zM12 124h7v7h-7zM26 124h7v7h-7zM47 124h7v7h-7zM54 124h7v7h-7zM68 124h7v7h-7zM75 124h7v7h-7zM96 124h7v7h-7zM103 124h7v7h-7zM117 124h7v7h-7zM124 124h7v7h-7zM131 124h7v7h-7zM138 124h7v7h-7zM145 124h7v7h-7zM152 124h7v7h-7zM166 124h7v7h-7zM173 124h7v7h-7zM68 131h7v7h-7zM89 131h7v7h-7zM124 131h7v7h-7zM152 131h7v7h-7zM166 131h7v7h-7zM173 131h7v7h-7zM12 138h7v7h-7zM19 138h7v7h-7zM26 138h7v7h-7zM33 138h7v7h-7zM40 138h7v7h-7zM47 138h7v7h-7zM54 138h7v7h-7zM82 138h7v7h-7zM89 138h7v7h-7zM96 138h7v7h-7zM103 138h7v7h-7zM110 138h7v7h-7zM124 138h7v7h-7zM138 138h7v7h-7zM152 138h7v7h-7zM180 138h7v7h-7zM12 145h7v7h-7zM54 145h7v7h-7zM75 145h7v7h-7zM82 145h7v7h-7zM89 145h7v7h-7zM103 145h7v7h-7zM117 145h7v7h-7zM124 145h7v7h-7zM152 145h7v7h-7zM173 145h7v7h-7zM180 145h7v7h-7zM12 152h7v7h-7zM26 152h7v7h-7zM33 152h7v7h-7zM40 152h7v7h-7zM54 152h7v7h-7zM68 152h7v7h-7zM82 152h7v7h-7zM89 152h7v7h-7zM96 152h7v7h-7zM110 152h7v7h-7zM117 152h7v7h-7zM124 152h7v7h-7zM131 152h7v7h-7zM138 152h7v7h-7zM145 152h7v7h-7zM152 152h7v7h-7zM173 152h7v7h-7zM12 159h7v7h-7zM26 159h7v7h-7zM33 159h7v7h-7zM40 159h7v7h-7zM54 159h7v7h-7zM68 159h7v7h-7zM75 159h7v7h-7zM89 159h7v7h-7zM117 159h7v7h-7zM124 159h7v7h-7zM131 159h7v7h-7zM138 159h7v7h-7zM173 159h7v7h-7zM180 159h7v7h-7zM12 166h7v7h-7zM26 166h7v7h-7zM33 166h7v7h-7zM40 166h7v7h-7zM54 166h7v7h-7zM82 166h7v7h-7zM89 166h7v7h-7zM103 166h7v7h-7zM110 166h7v7h-7zM131 166h7v7h-7zM152 166h7v7h-7zM159 166h7v7h-7zM166 166h7v7h-7zM173 166h7v7h-7zM180 166h7v7h-7zM12 173h7v7h-7zM54 173h7v7h-7zM68 173h7v7h-7zM82 173h7v7h-7zM117 173h7v7h-7zM131 173h7v7h-7zM145 173h7v7h-7zM152 173h7v7h-7zM166 173h7v7h-7zM173 173h7v7h-7zM180 173h7v7h-7zM12 180h7v7h-7zM19 180h7v7h-7zM26 180h7v7h-7zM33 180h7v7h-7zM40 180h7v7h-7zM47 180h7v7h-7zM54 180h7v7h-7zM68 180h7v7h-7zM96 180h7v7h-7zM124 180h7v7h-7zM131 180h7v7h-7zM138 180h7v7h-7zM159 180h7v7h-7zM180 180h7v7h-7z"/>
</svg>